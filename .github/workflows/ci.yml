name: Build and Push

on:
  push:
    branches:
      - main
      - dev

env:
  REGISTRY_URL: ${{ secrets.REGISTRY_URL || 'ghcr.io' }}
  REGISTRY_USER: ${{ secrets.REGISTRY_USER || github.actor }}
  REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD || secrets.GITHUB_TOKEN }}
      

jobs:
  docker:
    name: Docker Build and Push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Image Hub
        if: github.event_name == 'push'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_URL }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}

      - name: Format SHA
        id: format_sha
        run: |
          # echo "short_sha=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_OUTPUT
          short_sha=$(echo $GITHUB_SHA | cut -c1-7)
          echo "image_tag=${{ env.REGISTRY_URL }}/${{ github.repository }}:${short_sha}" >> $GITHUB_OUTPUT
          echo "image_latest=${{ env.REGISTRY_URL }}/${{ github.repository }}:latest" >> $GITHUB_OUTPUT

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true 
          platforms: linux/amd64
          build-args: GITHUB_SHA=${{ github.sha }}
          tags: ${{ steps.format_sha.outputs.image_tag }},${{ steps.format_sha.outputs.image_latest }}
      
      - name: Extract files from image
        run: |
            mkdir artifact
            docker create --name temp-container ${{ steps.format_sha.outputs.image_tag }}
            docker cp temp-container:dist ./artifact/
            docker cp temp-container:rustpad-server ./artifact/
            docker rm temp-container

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: artifact
          path: artifact